<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/website-sg3390/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/website-sg3390/" rel="alternate" type="text/html" /><updated>2023-03-19T15:56:37-04:00</updated><id>http://localhost:4000/website-sg3390/feed.xml</id><title type="html">Serra’s Project Updates</title><subtitle>Weekly updates are below.</subtitle><author><name>Serra Goker</name></author><entry><title type="html">Project Update Presentation</title><link href="http://localhost:4000/website-sg3390/presentation/midway-update/" rel="alternate" type="text/html" title="Project Update Presentation" /><published>2023-03-15T00:00:00-04:00</published><updated>2023-03-15T00:00:00-04:00</updated><id>http://localhost:4000/website-sg3390/presentation/midway-update</id><content type="html" xml:base="http://localhost:4000/website-sg3390/presentation/midway-update/"><![CDATA[<h4 id="this-page-contains-a-presentation-of-everything-that-has-been-completed-in-this-project-so-far">This page contains a presentation of everything that has been completed in this project so far.</h4>

<h2 id="what-is-the-project">What is the project?</h2>

<p>The goal of this project is to compare the reviews of three different products, produced from the same manufacturer 
and sold by different merchandisers. The manufacturer is Ulker (a leading food company in Turkey famous for its sweet
snacks). The products of Ulker can be found on the greatest e-commerce platform in Turkey: Trendyol. Similar to 
Amazon, you can get the same product from different sellers on Trendyol. We observed that the same product sold by 
different merchandisers have different concerns on the comments section. Therefore, we wanted to compare the comment 
section of three different products.</p>

<p>The products:</p>
<ol>
  <li><a href="https://www.trendyol.com/ulker/efsane-atistirmalik-paketi-p-32150980">Ulker Efsane Atistirmalik Paketi</a></li>
  <li><a href="https://www.trendyol.com/ulker/sutlu-pul-kuvertur-cikolata-eks-201-2-5-kg-p-41674124">Ulker Sutlu Pul Kuvertur Cikolata</a></li>
  <li><a href="https://www.trendyol.com/ulker/cikolata-all-star-paketi-p-37759574">Ulker Cikolata All-star Paketi</a></li>
</ol>

<h2 id="progress-of-the-project">Progress of the Project:</h2>

<ul class="task-list">
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" />Identify the products to be used in analysis</li>
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" />Implement a web scraper to obtain the comments from the website</li>
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" />Clean and format the data, save and store in Excel files</li>
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />Implement a Django Rest Framework API and post the data</li>
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />Analyze the data</li>
</ul>

<ol>
  <li>
    <p>Products Used in Analysis:</p>
  </li>
  <li>
    <p>Codes Implemented for Web Scraping:</p>
    <ol>
      <li>Utilized Selenium and BeautifulSoup</li>
    </ol>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  # open the browser 
  browser = webdriver.Chrome(ChromeDriverManager().install())
  browser.maximize_window()
  browser.get(url)
</code></pre></div>    </div>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> # load the page and manually sort comments, 
 # then scroll down automatically
 time.sleep(10)
 while i &lt; loop:
     browser.execute_script("window.scrollBy(0, 700);")
     time.sleep(0.8)
     i += 1
     django_logger.debug(f' Loop number: {i}')

 html = browser.page_source
 soup = BeautifulSoup(html, 'lxml')
</code></pre></div>    </div>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> # Get the reviews 
 brand = soup.find('div', class_='seller-name-text')
 brand_score = soup.find('div', class_='sl-pn')

 time.sleep(0.8)

 browser.execute_script("window.scrollBy(0, 400);")
 time.sleep(1)
 competitors = soup.findAll('div', class_='merchant-name-container')

 time.sleep(1)
 reviews = soup.find_all('div', class_='rnr-com-w')
</code></pre></div>    </div>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> # store data in arrays 
 for r in reviews:
     django_logger.debug(f' Review number: {i}')
     i += 1
     review_div = r.find_all('div', class_='rnr-com-tx')
     for r_div in review_div:
         django_logger.debug(f' Review text: {r_div.text}')
         revs_arr.append(r_div.text)

     review_date = r.find_all('span', class_='rnr-com-usr')
     for r_date in review_date:
         date_review = r_date.text.split('|')[1]
         django_logger.debug(f' Review text: {date_review}')
         dates_arr.append(convert(date_review))

     review_shop = r.find_all('span', class_='seller-name-info')
     for r_shop in review_shop:
         django_logger.debug(f'store: {r_shop.text}')
         shops_arr.append(r_shop.text)
</code></pre></div>    </div>
  </li>
</ol>

<p>Here is an example screenshot from the comments that were scraped:</p>

<p><img src="http://localhost:4000/website-sg3390/assets/images/ex_ss.jpg" alt="Unsplash image 9" /></p>

<p>Here is a screenshot showing how the data is stored in Excel Files:</p>

<p><img src="http://localhost:4000/website-sg3390/assets/images/excel_ss.png" alt="Unsplash image 0" /></p>

<h2 id="complications-and-problems">Complications and Problems:</h2>

<ol>
  <li>
    <p>Sorting the comments 
After automatically opening up the browser, we manually have to sort the comments from the drop-down menu.</p>
  </li>
  <li>
    <p>Obtaining the rating of the product in each review 
The html parsing of the stars are complicated to parse through. Here is a screenshot for how they are represented: 
<img src="http://localhost:4000/website-sg3390/assets/images/ss_html.png" alt="Unsplash image 1" />
So each star has an empty and full component and they are present in both cases.</p>
  </li>
</ol>

<h2 id="next-steps">Next Steps:</h2>]]></content><author><name>Serra Goker</name></author><category term="Presentation" /><summary type="html"><![CDATA[This page contains a presentation of everything that has been completed in this project so far.]]></summary></entry><entry><title type="html">Update 3</title><link href="http://localhost:4000/website-sg3390/update-3/" rel="alternate" type="text/html" title="Update 3" /><published>2023-02-24T00:00:00-05:00</published><updated>2023-02-24T00:00:00-05:00</updated><id>http://localhost:4000/website-sg3390/update-3</id><content type="html" xml:base="http://localhost:4000/website-sg3390/update-3/"><![CDATA[<h2 id="update-week-4">Update Week 4</h2>

<h3 id="identifying-and-scraping-competitor-products">Identifying and scraping competitor products</h3>

<p>After meeting with my superviser, we have decided to add two other products from the same company to our analysis. 
These products are manufactured by Turkey’s third biggest food processing company <a href="https://www.statista.
com/statistics/937245/food-processing-companies-turkey/">Ulker</a>. However, the products manufactured by Ulker are sold by 
other food distributors- including local shops. So by obtaining data from two other products, we can see if there is 
a difference related to the manufacturer or the product.</p>]]></content><author><name>Serra Goker</name></author><summary type="html"><![CDATA[Update Week 4]]></summary></entry><entry><title type="html">Update 2</title><link href="http://localhost:4000/website-sg3390/update-2/" rel="alternate" type="text/html" title="Update 2" /><published>2023-02-20T00:00:00-05:00</published><updated>2023-02-20T00:00:00-05:00</updated><id>http://localhost:4000/website-sg3390/update-2</id><content type="html" xml:base="http://localhost:4000/website-sg3390/update-2/"><![CDATA[<h2 id="update-week-3">Update Week 3</h2>

<h3 id="formatting-the-data">Formatting the data</h3>

<p>Tools used for formatting the data:</p>
<ol>
  <li>pandas DataFrame</li>
</ol>

<p>To store the data in an efficient way and easily visualize it, I utilized the pandas package for python. However, 
before storing the data in a dataframe format, I had to convert the dates of the reviews from Turkish to English. 
Since there weren’t any libraries within python for this conversion, I came up with a hard coded converter that I am 
hoping to improve.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>def conv_date(ad_date):
    new_date = ""
    if ad_date[1] == 'Ocak':
        new_date = "01/" + ad_date[0] + "/" + ad_date[2]
    elif ad_date[1] == 'Şubat':
        new_date = "02/" + ad_date[0] + "/" + ad_date[2]
    elif ad_date[1] == 'Mart':
        new_date = "03/" + ad_date[0] + "/" + ad_date[2]
    elif ad_date[1] == 'Nisan':
        new_date = "04/" + ad_date[0] + "/" + ad_date[2]
    elif ad_date[1] == 'Mayıs':
        new_date = "05/" + ad_date[0] + "/" + ad_date[2]
    elif ad_date[1] == 'Haziran':
        new_date = "06/" + ad_date[0] + "/" + ad_date[2]
    elif ad_date[1] == 'Temmuz':
        new_date = "07/" + ad_date[0] + "/" + ad_date[2]
    elif ad_date[1] == 'Ağustos':
        new_date = "08/" + ad_date[0] + "/" + ad_date[2]
    elif ad_date[1] == 'Eylül':
        new_date = "09/" + ad_date[0] + "/" + ad_date[2]
    elif ad_date[1] == 'Ekim':
        new_date = "10/" + ad_date[0] + "/" + ad_date[2]
    elif ad_date[1] == 'Kasım':
        new_date = "11/" + ad_date[0] + "/" + ad_date[2]
    elif ad_date[1] == 'Aralık':
        new_date = "12/" + ad_date[0] + "/" + ad_date[2]
    return new_date
</code></pre></div></div>

<p>After this conversion, I was able to store the data in the pandas dataframe. An advantage of the pandas package is 
its easy exportation to other file formats such as csv and excel. Since the reviews that I am storing are at most 
300 entries, it doesn’t require me to store it as a csv. Hence, I exported my data to Excel files for easy 
readability.</p>]]></content><author><name>Serra Goker</name></author><summary type="html"><![CDATA[Update Week 3]]></summary></entry><entry><title type="html">Update 1</title><link href="http://localhost:4000/website-sg3390/update-1/" rel="alternate" type="text/html" title="Update 1" /><published>2023-02-15T00:00:00-05:00</published><updated>2023-02-15T00:00:00-05:00</updated><id>http://localhost:4000/website-sg3390/update-1</id><content type="html" xml:base="http://localhost:4000/website-sg3390/update-1/"><![CDATA[<h2 id="update-week-2">Update Week 2</h2>

<h3 id="tools-to-be-used-for-the-project">Tools to be used for the project</h3>

<p>As mentioned in the proposal, this project will utilize web scraping tools to obtain data from websites. Web 
scraping refers to the automated process of extracting data from website using software tools. For the scope of this 
project I will utilize these tools:</p>
<ul class="task-list">
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" /><a href="https://selenium-python.readthedocs.io/">Selenium</a></li>
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" /><a href="https://pypi.org/project/beautifulsoup4/#:~:text=Beautiful%20Soup%20is%20a%20library,
and%20modifying%20the%20parse%20tree.">beautifulsoup4</a></li>
</ul>

<p>As the webpage that I am scraping has a dynamic comments section, the ChromeDriver package from Selenium opens up a 
chrome browser run by the script. This script scrolls down to the comments section of the product. With the sleep 
functionality of chromedriver, the browser freezes for 3 seconds before proceeding to scraping the comments. During 
these three seconds, I click the sort comments by date dropdown to ease the process of refining the latest comments. 
This is currently a loophole I am intending to fix, so that the scraping can be fully automated.</p>

<p>After sorting the comments, utilizing beautifulsoup4, I parsed the date, the text of the comment, and the seller 
name. Another challenge that arose during this process was parsing the score of the review. The score of the review 
is represented in the html as star icons filled in. I will be working furter on this challenge to come up with a way 
to parse the scores as well.</p>

<h4 id="to-do-for-next-time">To-do for next time:</h4>
<ul class="task-list">
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />automate date sorting</li>
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />parse review scores</li>
</ul>]]></content><author><name>Serra Goker</name></author><summary type="html"><![CDATA[Update Week 2]]></summary></entry><entry><title type="html">Project Proposal</title><link href="http://localhost:4000/website-sg3390/proposal/proposal/" rel="alternate" type="text/html" title="Project Proposal" /><published>2023-02-12T00:00:00-05:00</published><updated>2023-02-12T00:00:00-05:00</updated><id>http://localhost:4000/website-sg3390/proposal/proposal</id><content type="html" xml:base="http://localhost:4000/website-sg3390/proposal/proposal/"><![CDATA[<h2 id="project-proposal">Project Proposal</h2>

<p>This project will focus on building a tool that compares the performance of different e-commerce websites. More than ever, people have
been shopping online to get whatever they need delivered to their doorstep without stepping out of their apartments. As shopping online
became the habit for many people, more e-commerce businesses were created to supply for the high demand. The same product can be bought 
from Amazon as well as eBay or Walmart. In that case, which seller should the user prefer? Is there a way to identify the advantages or 
disadvantages of getting the same product from different sellers?</p>

<p>In an effort to answer these questions, this project will develop a system that compares the performance of the same product across 
different e-commerce sellers. By identifying the differences across platforms, this algorithm will recommend buyers the best platform
to obtain their product from. Furthermore, it will point out the lacking parts of the seller and will propose the areas where they need
to improve their service.</p>

<p>To quantify the analysis, the project will utilize a webscraping tool to obtain the comments under a certain product from the website.
After getting the initial data, a topic modeling algorithm (LDA/TF-IDF) will be used to extract specific concerns from the text data. 
These concerns could be related to packaging, delivery time, customer care, etc.</p>

<p>The last step for this project is going to be building website that showcases the differences between companies on interactive 
visuals that will best represent the analysis.</p>

<p>Previously, I have developed programs that utilized webscraping in static website. The challenge of this project will be to build 
one for a dynamic website.</p>]]></content><author><name>Serra Goker</name></author><category term="Proposal" /><summary type="html"><![CDATA[Project Proposal]]></summary></entry></feed>